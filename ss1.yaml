AWSTemplateFormatVersion: '2010-09-09'
Description: >
  AWS Service Catalog Product - CrossAccountAssumeRole
  Configures cross-account IAM roles between an EKS cluster (Account A)
  and target account (Account B) for controlled S3 access using IRSA or Pod Identity.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Account Configuration'
        Parameters:
          - SourceAccountId
          - TargetAccountId
          - AWSRegion
      - Label:
          default: 'EKS Cluster Configuration'
        Parameters:
          - EKSClusterName
          - KubernetesNamespace
          - ServiceAccountName
      - Label:
          default: 'IAM Role Configuration'
        Parameters:
          - RoleAName
          - RoleBName
          - PolicyAName
          - PolicyBName
          - PermissionsBoundaryArn
      - Label:
          default: 'S3 Access Configuration'
        Parameters:
          - S3BucketPrefix
          - EnableFullS3Access
      - Label:
          default: 'Tagging and Metadata'
        Parameters:
          - Environment
          - ProjectName
          - CostCenter
    ParameterLabels:
      SourceAccountId:
        default: 'Source AWS Account ID (Account A - EKS)'
      TargetAccountId:
        default: 'Target AWS Account ID (Account B - S3)'
      AWSRegion:
        default: 'AWS Region'
      EKSClusterName:
        default: 'EKS Cluster Name'
      KubernetesNamespace:
        default: 'Kubernetes Namespace'
      ServiceAccountName:
        default: 'Kubernetes Service Account Name'
      PermissionsBoundaryArn:
        default: 'Optional IAM Permissions Boundary ARN to apply to roles'

Parameters:
  # Account Configuration
  SourceAccountId:
    Type: String
    Description: 'AWS Account ID where the EKS cluster is running (Account A)'
    AllowedPattern: '^\d{12}$'

  TargetAccountId:
    Type: String
    Description: 'AWS Account ID containing S3 resources (Account B)'
    AllowedPattern: '^\d{12}$'

  AWSRegion:
    Type: String
    Description: 'AWS Region for resources'
    Default: 'eu-west-1'
    AllowedValues:
      - eu-west-1
      - eu-west-2
      - eu-central-1
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-northeast-1

  # EKS Configuration
  EKSClusterName:
    Type: String
    Description: 'Name of the EKS cluster in Account A'
    MinLength: 1
    MaxLength: 100

  KubernetesNamespace:
    Type: String
    Description: 'Kubernetes namespace where the service account exists'
    Default: 'airflow'

  ServiceAccountName:
    Type: String
    Description: 'Kubernetes service account name for Airflow workers'
    Default: 'airflow-worker'

  # IAM Role Configuration
  RoleAName:
    Type: String
    Default: 'AirflowPodIdentityRole'
    Description: 'Base name for Pod Identity Role; svc- prefix will be applied automatically'

  RoleBName:
    Type: String
    Default: 'AirflowCrossAccountTargetRole'
    Description: 'Base name for Target Role; svc- prefix will be applied automatically'

  PolicyAName:
    Type: String
    Default: 'AirflowAssumeRoleBPolicy'

  PolicyBName:
    Type: String
    Default: 'AirflowS3AccessPolicy'

  PermissionsBoundaryArn:
    Type: String
    Description: >
      (Optional) ARN of the IAM Permissions Boundary to attach to created roles.
      If not provided, template will use arn:aws:iam::${AWS::AccountId}:policy/svc-global-permissions-boundary
    Defa
